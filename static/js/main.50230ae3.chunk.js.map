{"version":3,"sources":["hooks/useTodoState.js","hooks/useInputState.js","EditTodoForm.js","hooks/useToggleState.js","Todo.js","TodoList.js","TodoForm.js","TodoApp.js","App.js","reportWebVitals.js","index.js"],"names":["UseTodoState","initialTodo","useState","todos","setTodos","addTodo","newTodo","id","uuidv4","todo","complete","deleteTodo","todoId","updatedTodos","filter","completeTodo","map","editTodo","updatedTask","initialVal","value","setValue","e","target","EditTodoForm","task","toggleIsEditing","useInputState","handleChange","reset","class","onSubmit","preventDefault","className","minLength","maxLength","placeholder","onChange","autoFocus","required","useToggle","state","setState","toggleState","Todo","isEditing","onClick","TodoList","TodoForm","type","TodoApp","initialTodos","JSON","parse","window","localStorage","getItem","useEffect","setItem","stringify","style","fontSize","color","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.50230ae3.chunk.js","sourcesContent":["import { useState } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nlet UseTodoState =  (initialTodo) => {\r\n     const [todos, setTodos] = useState(initialTodo);\r\n     return {\r\n          todos,\r\n          addTodo : newTodo => {\r\n               setTodos([...todos, {id: uuidv4(), todo: newTodo, complete: false}]);\r\n          \r\n          },\r\n     \r\n          deleteTodo : todoId => {\r\n               const updatedTodos = todos.filter(todo => todo.id !== todoId);\r\n               setTodos(updatedTodos);   \r\n          },\r\n\r\n          completeTodo : todoId => {\r\n               const updatedTodos = todos.map(todo => \r\n                    todo.id === todoId ? {...todo, complete: !todo.complete} : todo\r\n               )\r\n               setTodos(updatedTodos); \r\n          },\r\n     \r\n          editTodo : (todoId, updatedTask) => {\r\n               const updatedTodos = todos.map(todo => todo.id === todoId ?\r\n               {...todo, todo: updatedTask} : todo);\r\n               setTodos(updatedTodos);\r\n          },\r\n     }\r\n}\r\nexport default UseTodoState;","import {useState} from 'react';\r\nexport default initialVal => {\r\n     const [value, setValue] = useState(initialVal);\r\n     const handleChange = e => {\r\n          setValue(e.target.value);\r\n     };\r\n     const reset = () => {\r\n          setValue(\"\");\r\n     };\r\n     return [value, handleChange, reset];\r\n}","import React from 'react';\r\nimport useInputState from './hooks/useInputState';\r\n\r\nexport default function EditTodoForm({id, task, editTodo, toggleIsEditing}) {\r\n     const [value, \r\n          handleChange, \r\n          reset\r\n     ] = useInputState(task);\r\n\r\n     return (\r\n          <div>\r\n               <div class=\"buttonInside\">\r\n                    <form onSubmit={(e) => {\r\n                         e.preventDefault();\r\n                         editTodo(id,value);\r\n                         toggleIsEditing();\r\n                         reset();\r\n                    }}>\r\n                         <input className=\"inp\" \r\n                              minLength=\"5\" \r\n                              maxLength=\"100\"\r\n                              placeholder=\"Edit Todo\" \r\n                              value={value} \r\n                              onChange={handleChange} \r\n                              autoFocus\r\n                              required \r\n                         />\r\n                    </form>\r\n               </div>  \r\n          </div>\r\n     )\r\n}\r\n","import { useState } from 'react';\r\n\r\nfunction useToggle(initialVal = false){\r\n     const [state, setState] = useState(initialVal);\r\n     const toggleState = () => {\r\n          setState(!state)\r\n     };\r\n     return [state, toggleState];\r\n}\r\n\r\nexport default useToggle;\r\n","import React from 'react';\r\nimport EditTodoForm from './EditTodoForm';\r\nimport useToggle from './hooks/useToggleState';\r\nimport './TodoList.css';\r\n\r\n\r\n\r\nexport default function Todo({id, task, completeTodo, complete, deleteTodo, editTodo}) {\r\n     const [isEditing, \r\n          toggleIsEditing\r\n     ] = useToggle();\r\n\r\n     return (\r\n          <>\r\n          {/* if editing then shows form input, otherwise show todo */}\r\n               {isEditing ?   \r\n                    <EditTodoForm editTodo={editTodo} \r\n                         id={id} \r\n                         task={task} \r\n                         toggleIsEditing={toggleIsEditing} \r\n                    />\r\n                    : \r\n                    <div className=\"TodoList\" key={id}>\r\n                         {/* Todo task heading */}\r\n                         <h3  className={`todo-heading ${complete ? \"todo-complete\": \" \"}`}\r\n                              onClick={() => completeTodo(id)}>{task}\r\n                         </h3>\r\n                         {/* Editing button */}\r\n                         <button className=\"todo-edit\" \r\n                              onClick={toggleIsEditing}\r\n                         >\r\n                              <i class=\"fas fa-edit\"></i>\r\n                         </button>\r\n                         {/* Delete button */}\r\n                         <button className=\"todo-delete\" \r\n                              onClick={() => deleteTodo(id)}\r\n                         >\r\n                              <i class=\"fas fa-trash-alt\"></i>\r\n                         </button>\r\n                    </div> \r\n               }\r\n          </>\r\n        \r\n     )\r\n}\r\n","import React from 'react';\r\nimport Todo from './Todo';\r\n\r\nexport default function TodoList({todos, deleteTodo, completeTodo, editTodo}) {\r\n     return (\r\n          <div>\r\n               {todos.map(todo => (\r\n                    <Todo id={todo.id}\r\n                         key={todo.id}\r\n                         task={todo.todo}\r\n                         complete={todo.complete}\r\n                         deleteTodo={deleteTodo}\r\n                         completeTodo={completeTodo} \r\n                         editTodo={editTodo}  \r\n                    />\r\n               ))}\r\n               {/* Annimation balls on screen */}\r\n               <div className=\"movement\"></div>\r\n               <div className=\"movement2\"></div>  \r\n          </div>\r\n     )\r\n}\r\n","import React from 'react';\r\nimport './TodoForm.css';\r\nimport useInputState from './hooks/useInputState';\r\n\r\nexport default function TodoForm({addTodo}) {\r\n     const [value, setValue, reset] = useInputState(\"\");\r\n     return (\r\n         \r\n          <div className=\"buttonInside\">\r\n               <form onSubmit={(e) => {\r\n                    e.preventDefault();\r\n                    addTodo(value);\r\n                    reset();\r\n               }}>\r\n                    <input className=\"inp\" \r\n                         placeholder=\"Enter Todo\" \r\n                         value={value} \r\n                         onChange={setValue}\r\n                         maxLength=\"100\"\r\n                    />\r\n                    <button className=\"btn\" \r\n                         type=\"submit\">Todo\r\n                    </button>\r\n               </form>\r\n          </div>\r\n     )\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport UseTodoState from './hooks/useTodoState';\r\nimport TodoList from './TodoList';\r\nimport TodoForm from './TodoForm';\r\n\r\nexport default function TodoApp() {\r\n     //Default Todos\r\n     const arr = [\r\n          {id: \"1\", todo: \"Make Coffee\", complete: false},\r\n          {id: \"2\", todo: \"Make Tea\", complete: false},\r\n          {id: \"3\", todo: \"Make Orange Juice\", complete: false}   \r\n     ]\r\n     //Take Todo from localStorage or use default todos.\r\n     const initialTodos = JSON.parse(\r\n          window.localStorage.getItem('todos')\r\n     ) || arr;\r\n\r\n     //Importing states from UseTodoStateHook\r\n     const {todos, \r\n          addTodo, \r\n          deleteTodo, \r\n          completeTodo,\r\n          editTodo\r\n     } = UseTodoState(initialTodos);\r\n     \r\n     //Re-renders everytime when identifies any activity on todos\r\n     useEffect(() => {\r\n          window.localStorage.setItem('todos', JSON.stringify(todos));\r\n     }, [todos])\r\n    \r\n  \r\n\r\n     return (\r\n          <div>\r\n               <h1 style={{fontSize: \"40px\", color: \"white\"}}>TODO LIST</h1>\r\n               <TodoForm addTodo={addTodo} />\r\n               <TodoList todos={todos} \r\n                    deleteTodo={deleteTodo} \r\n                    editTodo={editTodo} \r\n                    completeTodo={completeTodo}\r\n                    />   \r\n          </div>\r\n     )\r\n}\r\n","import TodoApp from './TodoApp';\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n     <TodoApp />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}